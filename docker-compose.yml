services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: api_postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env

  redis:
    image: redis:7-alpine
    container_name: api_redis
    volumes:
      - redis_data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning", "--maxmemory", "100mb", "--maxmemory-policy", "allkeys-lru"]
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
    container_name: api_backend
    restart: always
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    env_file:
      - .env

  frontend:
    build:
      context: ./frontend
    container_name: api_frontend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - backend
    env_file:
      - .env

  address_importer:
    build:
      context: .
      dockerfile: ./importer/Dockerfile
    container_name: address_importer
    depends_on:
      - postgres
    volumes:
      - ./db:/app/db
      - ./importer/import_addresses.sh:/app/import_addresses.sh
      - ./.env:/app/.env:ro
    env_file:
      - .env
    entrypoint: ["/bin/sh", "/app/import_addresses.sh"]

volumes:
  pgdata:
  redis_data:
